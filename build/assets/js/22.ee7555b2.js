(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{511:function(a,s,e){"use strict";e.r(s);var t=e(3),r=Object(t.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"使用n卡加速-mp4-hls"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用n卡加速-mp4-hls"}},[a._v("#")]),a._v(" 使用N卡加速 mp4 -> hls")]),a._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("ffmpeg "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" input.mp4 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:v")]),a._v(" h264_nvenc "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-preset")]),a._v(" medium "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-b:v")]),a._v(" 2000k "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-maxrate:v")]),a._v(" 2000k "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-bufsize:v")]),a._v(" 4000k "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s:v")]),a._v(" 1280x720 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("n\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-map")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(":v:0   "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-map")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(":a? "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:a")]),a._v(" copy "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" ssegment "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("n\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-segment_list")]),a._v(" ./hls/out_720p.m3u8 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-segment_time")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v(" ./hls/out_%03d_720p.ts\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("这个ffmpeg命令用于将输入的input.mp4视频文件转码为使用NVIDIA GPU加速的H.264编码，并且将其分割成多个HLS（HTTP Live Streaming）的.ts片段，同时生成一个播放列表out.m3u8。下面是该命令各部分的详细解读：\n\n基本输入输出：\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" input.mp4：指定输入文件为input.mp4。\n视频编码：\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:v")]),a._v(" h264_nvenc：使用NVIDIA的GPU加速的H.264编码器h264_nvenc。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-preset")]),a._v(" medium：设置编码的预设为medium，这通常是一个速度和质量的折衷。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-b:v")]),a._v(" 2000k：设置视频比特率为2000kbps。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-maxrate:v")]),a._v(" 2000k：设置视频最大比特率为2000kbps，防止视频比特率超过这个值。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-bufsize:v")]),a._v(" 4000k：设置VBV（Video Buffering Verifier）缓冲区大小为4000kbps，这有助于控制视频流的稳定性。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s:v")]),a._v(" 1280x720：设置视频分辨率为1280x720，即720p。\n流映射：\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-map")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(":v:0：从输入文件（编号为0）选择第一路视频流（编号为0）进行转码。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-map")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(":a?：如果输入文件包含音频流，则选择所有的音频流（如果有多个音频流，它们都会被包含）。?表示如果音频流不存在，则不会报错。\n音频编码：\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:a")]),a._v(" copy：对于音频流，不进行重新编码，而是直接复制，以保持原始音频的质量和格式。\n输出格式和分段：\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" ssegment：指定输出格式为ssegment，即分割的媒体流格式，用于HLS。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-segment_list")]),a._v(" ./hls/out.m3u8：生成一个播放列表文件out.m3u8，用于HLS。这个文件会被保存在./hls/目录下。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-segment_time")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v("：每个分段文件的时长为10秒。\n./hls/out_%03d_720p.ts：输出的.ts文件模板，它们会被保存在./hls/目录下。%03d是一个占位符，表示分段的序号，从000开始。文件名中的720p正确地反映了视频的实际分辨率。\n这个命令通常用于视频流服务，如在线视频直播或点播，其中视频内容需要被分割成多个小的片段，以支持流媒体的播放。通过HLS，这些片段可以被有效地传输到用户的设备上，并支持在多种网络条件下的播放。\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br")])]),s("h2",{attrs:{id:"n卡加速-mp4-flv"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#n卡加速-mp4-flv"}},[a._v("#")]),a._v(" N卡加速 mp4 -> flv")]),a._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("ffmpeg "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-hwaccel")]),a._v(" auto "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" input.mp4 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:v")]),a._v(" h264_nvenc "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-preset")]),a._v(" fast "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:a")]),a._v(" copy output.flv\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("解释一下这个命令：\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-hwaccel")]),a._v(" auto：自动选择合适的硬件加速方法，这里会使用NVIDIA GPU如果可用。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" input.mp4：指定输入的MP4文件。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:v")]),a._v(" h264_nvenc：使用NVIDIA的H.264 NVENC编码器进行视频编码。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-preset")]),a._v(" fast：选择一个较快的编码预设，平衡速度和输出质量。根据需要，你也可以选择其他预设如medium, slow等。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:a")]),a._v(" copy：音频流直接复制，不重新编码，这样可以节省时间和保持原始音质。\noutput.flv：指定输出的FLV文件名。\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("hr"),a._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("ffmpeg "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-hwaccel")]),a._v(" auto "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" input.mp4 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:v")]),a._v(" h264_nvenc "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-preset")]),a._v(" fast "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-b:v")]),a._v(" 500k "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),a._v(" 640x360 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:a")]),a._v(" copy output_360p.flv\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("解释一下各参数的含义：\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-hwaccel")]),a._v(" auto：自动选择硬件加速方法，这里会根据系统配置自动使用NVIDIA GPU（如果可用）。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" input.mp4：指定输入文件为input.mp4。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:v")]),a._v(" h264_nvenc：指定使用NVIDIA NVENC硬件加速编码器进行H.264视频编码。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-preset")]),a._v(" fast：使用快速编码预设，平衡编码速度和输出质量。根据需要，你也可以选择其他预设如medium, slow, hp, hq等。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-b:v")]),a._v(" 500k：设置视频比特率为500kbps。根据你的需求调整这个值来控制输出视频的质量和文件大小。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),a._v(" 640x360：设置输出视频的分辨率为640x360。你可以根据需要替换为其他分辨率，比如1280x720。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:a")]),a._v(" copy：音频流直接复制，不进行重新编码，这样可以保持原音质且加快处理速度。\noutput.flv：指定输出文件名为output.flv，即FLV格式。\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br")])])])}),[],!1,null,null,null);s.default=r.exports}}]);